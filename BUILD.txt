//-------------- Using GNU Makefile --------------//

// Build with Makefile.old
// Make all files - this creates output directories, obj files and binary files
make -f Makefile.old all

// Make/Run test suite
make -f Makefile.old check

// Make/Run test suite with debugging output
make -f Makefile.old check-debug

// Clean out object and binary directories
make -f Makefile.old clean

// Return to pristine condition
make -f Makefile.old dist-clean

// Run the RomNumCalcApp from the top directory
LD_LIBRARY_PATH=bin bin/RomNumCalcApp
LD_LIBRARY_PATH=bin bin/RomNumCalcApp -a X X
LD_LIBRARY_PATH=bin bin/RomNumCalcApp -s XI X
LD_LIBRARY_PATH=bin bin/RomNumCalcApp -c IX X

// Run the RomNumCalcApp in debug mode
LD_LIBRARY_PATH=bin bin/RomNumCalcApp -d -a X X

//-------------- Using Autotools --------------//

// Build with autoconf tools
// Run autoreconf to create Makefile.in
autoreconf --install

// Add a build directory
mkdir build

// Run configure to get new Makefile
cd build
../configure

// Run unit tests
make check

// Run make to build the binaries
make

// The app resides in a subdirectory of the build directory at ./src/app/.libs/RomNumCalcApp
// The library resides in ./src/lib/.libs/libRomNumMath.so
// You can run the app from a convenient shell script at ./src/app/RomNumCalcApp that knows
// where to find the library at runtime.

// Run shell script for app on command line from build directory
./src/app/RomNumCalcApp
 - this gives brief app description
./src/app/RomNumCalcApp -a IX IX
 - outputs: IX + IX = XVIII
./src/app/RomNumCalcApp -s IX I
 - outputs: IX - I = VIII
./src/app/RomNumCalcApp -c X IX
 - outputs: X > IX

